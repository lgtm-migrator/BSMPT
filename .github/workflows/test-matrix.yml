# SPDX-FileCopyrightText: 2021 Philipp Basler, Margarete Mühlleitner and Jonas Müller
#
# SPDX-License-Identifier: GPL-3.0-or-later

name: Unit tests

on:
  push:
    branches: [ master, matrix-os  ]
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch:
    

jobs:
  tests-fullSetup:
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-2019]
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'skip-ci')"
    env:
      ACTIONS_STEP_DEBUG: true

    steps:
    - uses: actions/checkout@v3
      with:
          persist-credentials: false
          
    - name : installPackages on Ubuntu
      if: startsWith(matrix.os, 'ubuntu')
      run : sudo apt-get update && sudo apt-get install --no-install-recommends --yes libgsl-dev libeigen3-dev libnlopt-dev libnlopt-cxx-dev libboost-all-dev
    
    - name: Install packages on Mac
      if: startsWith(matrix.os, 'macos')
      run: brew install eigen gsl nlopt boost libomp
      
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      if: startsWith(matrix.os, 'windows')
    - name: Install conan
      if: startsWith(matrix.os, 'windows')
      run: pip install conan
    - name: Refresh Shell
      if: startsWith(matrix.os, 'windows')
      run: refreshenv
      
      
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v1
      id: cpu-cores
    - name: cmake generate
      run: |
        UseConan=OFF
        if [[ "${{ matrix.os }}" =~ ^windows.* ]] then UseConan=ON; fi
        cmake -S . -B build -DUseConan=$UseConan -DCMAKE_BUILD_TYPE=Release
    - name: compile
      run: cd build && cmake --build . -j${{ steps.cpu-cores.outputs.count }} --config Release
    - name: Test
      run: cd build && ctest -j${{ steps.cpu-cores.outputs.count }} --output-on-failure
      


